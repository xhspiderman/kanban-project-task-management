{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","registerServiceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","role","href","class","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","headerLinks","security","validToken","user","userIsAuthenticated","Link","to","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","src","alt","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","Route","render","Redirect","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Switch","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b75d5a9b.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-4 d-lg-block\">\n              <div className=\"btn-group-vertical list-group\">\n                <a role=\"button\" href={`/projectBoard/${project.projectIdentifier}`} class=\"btn text-primary list-group-item board text-left\"><i className=\"fa fa-clipboard-list\"></i> Project Board</a>\n                <a role=\"button\" href={`/updateProject/${project.projectIdentifier}`} class=\"btn text-info list-group-item update text-left\"><i className=\"fa fa-edit\"></i> Update Project Info</a>\n                <button onClick={this.onDeleteClick.bind(\n                  this,\n                  project.projectIdentifier\n                )} class=\"btn text-danger list-group-item delete text-left\"><i className=\"fa fa-minus-circle\"></i> Delete Project</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n    <a role=\"button\" href='/addProject' class=\"btn btn-lg btn-info\"><i className=\"fas fa-plus-circle\"></i> Create a Project</a>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectButton />\n\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSequence !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  //set state\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          <span className=\"float-left\">ID: {project_task.projectSequence} </span>\n          <span className=\"float-right\">Priority: {priorityString}</span>\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK\n} from \"./types\";\n\n//Fix bug with priority in Spring Boot Server, needs to check null first\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data\n    });\n  } catch (err) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n            {\n              // insert tasks here\n            }\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        //PROJECT IDENTIFIER BUG\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <a role=\"button\" href={`/addProjectTask/${id}`}  class=\"btn btn-primary\"><i className=\"fas fa-plus-circle\"></i> Create Project Task</a>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  // on change\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  //on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-4 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-6 offset-md-3  text-center\">\n                <img src=\"images/project-management.png\" class=\"img-fluid\" alt=\"...\" />\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              //Public Routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //Private Routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}